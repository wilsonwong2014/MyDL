#!/usr/bin/env python3
# -*- coding: utf-8 -*-

''' 文件重命名
   把指定目录下的文件名,重新按序号命名,不支持递归

功能说明:
    前缀加流水号重命名文件,不支持递归.

参数说明:
    --from_path 
使用范例:
    $python3 rename_index.py --from_path ./src --to_path ./dst --prefix new_
'''
import os
import sys
import shutil
import argparse
import pdb

def rename_index(path,prefix=''):
    ''' 文件重命名
    @param path:目录
    @param prefix:新命名前缀
    '''
    if not os.path.exists(path):
        print('path:"%s" not exists!'%(path))
    else:
        files=os.listdir(path)
        index=0
        for src in files:
            exts=os.path.splitext(src)
            src_file='%s/%s'%(path,src)
            dst_file='%s/%s%d%s'%(path,prefix,index,exts[1])
            shutil.move( src_file, dst_file)
            index+=1

def params():
    ''' 程序参数
    '''
    #程序描述
    description='文件重命名'
    # Create ArgumentParser() object
    parser = argparse.ArgumentParser(description=description);
    # Add argument
    parser.add_argument('--path',type=str, help='目录. eg. --path "./temp"',default='');
    parser.add_argument('--prefix', type=str, help='文件名前缀. eg. --prefix "new_"', default='');
    parser.add_argument('--dbg', type=int, help='是否调试(1-调试,0-不调试). eg. --dbg 0', default=0);
    # Parse argument
    arg = parser.parse_args();
    #调试
    pdb.set_trace() if arg.dbg==1 else ''
    return arg


def main(arg):
    ''' 主函数
    '''
    rename_index(arg.path,arg.prefix)

if __name__=='__main__':
    arg=params()
    main(arg)
    print('Finished!')

